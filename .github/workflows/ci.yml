name: ci-test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  test:
    name: Test
    runs-on: ubuntu-latest
    environment: automated-test
    env:
      DB_SOURCE: postgres://postgres:${{ secrets.POSTGRES_PASSWORD }}@localhost:5432/banking?sslmode=disable
      DB_DRIVER: postgres
      SERVER_ADDRESS: "0.0.0.0:8080"
      PUBLIC_KEY: ${{ secrets.PUBLIC_KEY }}
      PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: banking
          POSTGRES_USER: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21.6'

    - name: Install Go migrate
      run: |
        curl -L https://github.com/golang-migrate/migrate/releases/download/v4.17.0/migrate.linux-amd64.tar.gz | tar xvz
        sudo mv migrate /usr/bin/
        which migrate

    - name: Install Mockery
      run: |
        curl -L https://github.com/vektra/mockery/releases/download/v2.42.0/mockery_2.42.0_Linux_x86_64.tar.gz | tar xvz
        sudo mv mockery /usr/bin/
        which mockery

    - name: Run migrations
      run: make migrateup

    - name: Build
      run: go build -v ./...

    - name: Build
      run: go run util/command/elipticalKeyPair/main.go

    - name: Test
      run: make test
